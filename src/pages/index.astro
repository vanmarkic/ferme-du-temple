---
import BaseLayout from '../layouts/BaseLayout.astro';
import { Providers } from '@/components/Providers';
import { HeroSection } from '@/components/HeroSection';
import { ProjectSection } from '@/components/ProjectSection';
import { CollaborationSection } from '@/components/CollaborationSection';
import { LocationSection } from '@/components/LocationSection';
import { PricingSection } from '@/components/PricingSection';
import { InscriptionForm } from '@/components/InscriptionForm';
import { TimelineSection } from '@/components/TimelineSection';
import { Footer } from '@/components/Footer';
import { getEntry, render } from 'astro:content';

// Load content from Content Collections
const heroEntry = await getEntry('hero', 'hero');
const projectEntry = await getEntry('project', 'project');
const collaborationEntry = await getEntry('collaboration', 'collaboration');
const locationEntry = await getEntry('location', 'location');
const pricingEntry = await getEntry('pricing', 'pricing');
const timelineEntry = await getEntry('timeline', 'timeline');
const inscriptionEntry = await getEntry('inscription', 'inscription');
const footerEntry = await getEntry('footer', 'footer');

// Error handling for missing entries
if (!heroEntry) throw new Error('Hero content not found');
if (!projectEntry) throw new Error('Project content not found');
if (!collaborationEntry) throw new Error('Collaboration content not found');
if (!locationEntry) throw new Error('Location content not found');
if (!pricingEntry) throw new Error('Pricing content not found');
if (!timelineEntry) throw new Error('Timeline content not found');
if (!inscriptionEntry) throw new Error('Inscription content not found');
if (!footerEntry) throw new Error('Footer content not found');

// Validate required properties
if (!projectEntry.data.title) throw new Error('Project title is required');
if (!projectEntry.data.subtitle) throw new Error('Project subtitle is required');

// Render markdown content to get body HTML
const { Content: ProjectContent } = await render(projectEntry);
const { Content: CollaborationContent } = await render(collaborationEntry);
const { Content: LocationContent } = await render(locationEntry);
const { Content: PricingContent } = await render(pricingEntry);
const { Content: TimelineContent } = await render(timelineEntry);
const { Content: FooterContent } = await render(footerEntry);
---

<BaseLayout>
  <Providers client:load>
    <div class="min-h-screen">
      <HeroSection client:load content={heroEntry.data} />
      <ProjectSection client:load content={projectEntry.data} body={projectEntry.body} />
      <CollaborationSection client:load content={collaborationEntry.data} body={collaborationEntry.body} />
      <LocationSection client:only="react" content={locationEntry.data} body={locationEntry.body} />
      <PricingSection client:load content={pricingEntry.data} body={pricingEntry.body} />
      <InscriptionForm client:load content={inscriptionEntry.data} />
      <TimelineSection client:load content={timelineEntry.data} body={timelineEntry.body} />
      <Footer client:load content={footerEntry.data} body={footerEntry.body} />
    </div>
  </Providers>
</BaseLayout>
